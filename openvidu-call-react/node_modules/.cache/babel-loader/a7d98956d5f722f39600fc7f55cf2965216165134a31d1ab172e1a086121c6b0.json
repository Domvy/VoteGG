{"ast":null,"code":"import axios from'axios';import{OpenVidu}from'openvidu-browser';import React,{Component}from'react';import ChatComponent from'./chat/ChatComponent';import DialogExtensionComponent from'./dialog-extension/DialogExtension';import StreamComponent from'./stream/StreamComponent';import'./VideoRoomComponent.css';import OpenViduLayout from'../layout/openvidu-layout';import UserModel from'../models/user-model';import ToolbarComponent from'./toolbar/ToolbarComponent';var localUser=new UserModel();const APPLICATION_SERVER_URL=process.env.NODE_ENV==='production'?'http://localhost:5000/':'http://localhost:5000/';class VideoRoomComponent extends Component{constructor(props){super(props);this.hasBeenUpdated=false;this.layout=new OpenViduLayout();let sessionName=this.props.sessionName?this.props.sessionName:'SessionA';let userName=this.props.user?this.props.user:'OpenVidu_User'+Math.floor(Math.random()*100);this.remotes=[];this.localUserAccessAllowed=false;this.state={mySessionId:sessionName,myUserName:userName,session:undefined,localUser:undefined,subscribers:[],chatDisplay:'none',currentVideoDevice:undefined};this.joinSession=this.joinSession.bind(this);this.leaveSession=this.leaveSession.bind(this);this.onbeforeunload=this.onbeforeunload.bind(this);this.updateLayout=this.updateLayout.bind(this);this.camStatusChanged=this.camStatusChanged.bind(this);this.micStatusChanged=this.micStatusChanged.bind(this);this.nicknameChanged=this.nicknameChanged.bind(this);this.toggleFullscreen=this.toggleFullscreen.bind(this);this.switchCamera=this.switchCamera.bind(this);this.screenShare=this.screenShare.bind(this);this.stopScreenShare=this.stopScreenShare.bind(this);this.closeDialogExtension=this.closeDialogExtension.bind(this);this.toggleChat=this.toggleChat.bind(this);this.checkNotification=this.checkNotification.bind(this);this.checkSize=this.checkSize.bind(this);}componentDidMount(){const openViduLayoutOptions={maxRatio:3/2,// The narrowest ratio that will be used (default 2x3)\nminRatio:9/16,// The widest ratio that will be used (default 16x9)\nfixedRatio:false,// If this is true then the aspect ratio of the video is maintained and minRatio and maxRatio are ignored (default false)\nbigClass:'OV_big',// The class to add to elements that should be sized bigger\nbigPercentage:0.8,// The maximum percentage of space the big ones should take up\nbigFixedRatio:false,// fixedRatio for the big ones\nbigMaxRatio:3/2,// The narrowest ratio to use for the big elements (default 2x3)\nbigMinRatio:9/16,// The widest ratio to use for the big elements (default 16x9)\nbigFirst:true,// Whether to place the big one in the top left (true) or bottom right\nanimate:true// Whether you want to animate the transitions\n};this.layout.initLayoutContainer(document.getElementById('layout'),openViduLayoutOptions);window.addEventListener('beforeunload',this.onbeforeunload);window.addEventListener('resize',this.updateLayout);window.addEventListener('resize',this.checkSize);this.joinSession();}componentWillUnmount(){window.removeEventListener('beforeunload',this.onbeforeunload);window.removeEventListener('resize',this.updateLayout);window.removeEventListener('resize',this.checkSize);this.leaveSession();}onbeforeunload(event){this.leaveSession();}joinSession(){this.OV=new OpenVidu();this.setState({session:this.OV.initSession()},async()=>{this.subscribeToStreamCreated();await this.connectToSession();});}async connectToSession(){if(this.props.token!==undefined){console.log('token received: ',this.props.token);this.connect(this.props.token);}else{try{var token=await this.getToken();console.log(token);this.connect(token);}catch(error){console.error('There was an error getting the token:',error.code,error.message);if(this.props.error){this.props.error({error:error.error,messgae:error.message,code:error.code,status:error.status});}alert('There was an error getting the token:',error.message);}}}connect(token){this.state.session.connect(token,{clientData:this.state.myUserName}).then(()=>{this.connectWebCam();}).catch(error=>{if(this.props.error){this.props.error({error:error.error,messgae:error.message,code:error.code,status:error.status});}alert('There was an error connecting to the session:',error.message);console.log('There was an error connecting to the session:',error.code,error.message);});}async connectWebCam(){await this.OV.getUserMedia({audioSource:undefined,videoSource:undefined});var devices=await this.OV.getDevices();var videoDevices=devices.filter(device=>device.kind==='videoinput');let publisher=this.OV.initPublisher(undefined,{audioSource:undefined,videoSource:videoDevices[0].deviceId,publishAudio:localUser.isAudioActive(),publishVideo:localUser.isVideoActive(),resolution:'640x480',frameRate:30,insertMode:'APPEND'});if(this.state.session.capabilities.publish){publisher.on('accessAllowed',()=>{this.state.session.publish(publisher).then(()=>{this.updateSubscribers();this.localUserAccessAllowed=true;if(this.props.joinSession){this.props.joinSession();}});});}localUser.setNickname(this.state.myUserName);localUser.setConnectionId(this.state.session.connection.connectionId);localUser.setScreenShareActive(false);localUser.setStreamManager(publisher);this.subscribeToUserChanged();this.subscribeToStreamDestroyed();this.sendSignalUserChanged({isScreenShareActive:localUser.isScreenShareActive()});this.setState({currentVideoDevice:videoDevices[0],localUser:localUser},()=>{this.state.localUser.getStreamManager().on('streamPlaying',e=>{this.updateLayout();publisher.videos[0].video.parentElement.classList.remove('custom-class');});});}updateSubscribers(){var subscribers=this.remotes;this.setState({subscribers:subscribers},()=>{if(this.state.localUser){this.sendSignalUserChanged({isAudioActive:this.state.localUser.isAudioActive(),isVideoActive:this.state.localUser.isVideoActive(),nickname:this.state.localUser.getNickname(),isScreenShareActive:this.state.localUser.isScreenShareActive()});}this.updateLayout();});}leaveSession(){const mySession=this.state.session;if(mySession){mySession.disconnect();}// Empty all properties...\nthis.OV=null;this.setState({session:undefined,subscribers:[],mySessionId:'SessionA',myUserName:'OpenVidu_User'+Math.floor(Math.random()*100),localUser:undefined});if(this.props.leaveSession){this.props.leaveSession();}}camStatusChanged(){localUser.setVideoActive(!localUser.isVideoActive());localUser.getStreamManager().publishVideo(localUser.isVideoActive());this.sendSignalUserChanged({isVideoActive:localUser.isVideoActive()});this.setState({localUser:localUser});}micStatusChanged(){localUser.setAudioActive(!localUser.isAudioActive());localUser.getStreamManager().publishAudio(localUser.isAudioActive());this.sendSignalUserChanged({isAudioActive:localUser.isAudioActive()});this.setState({localUser:localUser});}nicknameChanged(nickname){let localUser=this.state.localUser;localUser.setNickname(nickname);this.setState({localUser:localUser});this.sendSignalUserChanged({nickname:this.state.localUser.getNickname()});}deleteSubscriber(stream){const remoteUsers=this.state.subscribers;const userStream=remoteUsers.filter(user=>user.getStreamManager().stream===stream)[0];let index=remoteUsers.indexOf(userStream,0);if(index>-1){remoteUsers.splice(index,1);this.setState({subscribers:remoteUsers});}}subscribeToStreamCreated(){this.state.session.on('streamCreated',event=>{const subscriber=this.state.session.subscribe(event.stream,undefined);// var subscribers = this.state.subscribers;\nsubscriber.on('streamPlaying',e=>{this.checkSomeoneShareScreen();subscriber.videos[0].video.parentElement.classList.remove('custom-class');});const newUser=new UserModel();newUser.setStreamManager(subscriber);newUser.setConnectionId(event.stream.connection.connectionId);newUser.setType('remote');const nickname=event.stream.connection.data.split('%')[0];newUser.setNickname(JSON.parse(nickname).clientData);this.remotes.push(newUser);if(this.localUserAccessAllowed){this.updateSubscribers();}});}subscribeToStreamDestroyed(){// On every Stream destroyed...\nthis.state.session.on('streamDestroyed',event=>{// Remove the stream from 'subscribers' array\nthis.deleteSubscriber(event.stream);setTimeout(()=>{this.checkSomeoneShareScreen();},20);event.preventDefault();this.updateLayout();});}subscribeToUserChanged(){this.state.session.on('signal:userChanged',event=>{let remoteUsers=this.state.subscribers;remoteUsers.forEach(user=>{if(user.getConnectionId()===event.from.connectionId){const data=JSON.parse(event.data);console.log('EVENTO REMOTE: ',event.data);if(data.isAudioActive!==undefined){user.setAudioActive(data.isAudioActive);}if(data.isVideoActive!==undefined){user.setVideoActive(data.isVideoActive);}if(data.nickname!==undefined){user.setNickname(data.nickname);}if(data.isScreenShareActive!==undefined){user.setScreenShareActive(data.isScreenShareActive);}}});this.setState({subscribers:remoteUsers},()=>this.checkSomeoneShareScreen());});}updateLayout(){setTimeout(()=>{this.layout.updateLayout();},20);}sendSignalUserChanged(data){const signalOptions={data:JSON.stringify(data),type:'userChanged'};this.state.session.signal(signalOptions);}toggleFullscreen(){const document=window.document;const fs=document.getElementById('container');if(!document.fullscreenElement&&!document.mozFullScreenElement&&!document.webkitFullscreenElement&&!document.msFullscreenElement){if(fs.requestFullscreen){fs.requestFullscreen();}else if(fs.msRequestFullscreen){fs.msRequestFullscreen();}else if(fs.mozRequestFullScreen){fs.mozRequestFullScreen();}else if(fs.webkitRequestFullscreen){fs.webkitRequestFullscreen();}}else{if(document.exitFullscreen){document.exitFullscreen();}else if(document.msExitFullscreen){document.msExitFullscreen();}else if(document.mozCancelFullScreen){document.mozCancelFullScreen();}else if(document.webkitExitFullscreen){document.webkitExitFullscreen();}}}async switchCamera(){try{const devices=await this.OV.getDevices();var videoDevices=devices.filter(device=>device.kind==='videoinput');if(videoDevices&&videoDevices.length>1){var newVideoDevice=videoDevices.filter(device=>device.deviceId!==this.state.currentVideoDevice.deviceId);if(newVideoDevice.length>0){// Creating a new publisher with specific videoSource\n// In mobile devices the default and first camera is the front one\nvar newPublisher=this.OV.initPublisher(undefined,{audioSource:undefined,videoSource:newVideoDevice[0].deviceId,publishAudio:localUser.isAudioActive(),publishVideo:localUser.isVideoActive(),mirror:true});//newPublisher.once(\"accessAllowed\", () => {\nawait this.state.session.unpublish(this.state.localUser.getStreamManager());await this.state.session.publish(newPublisher);this.state.localUser.setStreamManager(newPublisher);this.setState({currentVideoDevice:newVideoDevice,localUser:localUser});}}}catch(e){console.error(e);}}screenShare(){const videoSource=navigator.userAgent.indexOf('Firefox')!==-1?'window':'screen';const publisher=this.OV.initPublisher(undefined,{videoSource:videoSource,publishAudio:localUser.isAudioActive(),publishVideo:localUser.isVideoActive(),mirror:false},error=>{if(error&&error.name==='SCREEN_EXTENSION_NOT_INSTALLED'){this.setState({showExtensionDialog:true});}else if(error&&error.name==='SCREEN_SHARING_NOT_SUPPORTED'){alert('Your browser does not support screen sharing');}else if(error&&error.name==='SCREEN_EXTENSION_DISABLED'){alert('You need to enable screen sharing extension');}else if(error&&error.name==='SCREEN_CAPTURE_DENIED'){alert('You need to choose a window or application to share');}});publisher.once('accessAllowed',()=>{this.state.session.unpublish(localUser.getStreamManager());localUser.setStreamManager(publisher);this.state.session.publish(localUser.getStreamManager()).then(()=>{localUser.setScreenShareActive(true);this.setState({localUser:localUser},()=>{this.sendSignalUserChanged({isScreenShareActive:localUser.isScreenShareActive()});});});});publisher.on('streamPlaying',()=>{this.updateLayout();publisher.videos[0].video.parentElement.classList.remove('custom-class');});}closeDialogExtension(){this.setState({showExtensionDialog:false});}stopScreenShare(){this.state.session.unpublish(localUser.getStreamManager());this.connectWebCam();}checkSomeoneShareScreen(){let isScreenShared;// return true if at least one passes the test\nisScreenShared=this.state.subscribers.some(user=>user.isScreenShareActive())||localUser.isScreenShareActive();const openviduLayoutOptions={maxRatio:3/2,minRatio:9/16,fixedRatio:isScreenShared,bigClass:'OV_big',bigPercentage:0.8,bigFixedRatio:false,bigMaxRatio:3/2,bigMinRatio:9/16,bigFirst:true,animate:true};this.layout.setLayoutOptions(openviduLayoutOptions);this.updateLayout();}toggleChat(property){let display=property;if(display===undefined){display=this.state.chatDisplay==='none'?'block':'none';}if(display==='block'){this.setState({chatDisplay:display,messageReceived:false});}else{console.log('chat',display);this.setState({chatDisplay:display});}this.updateLayout();}checkNotification(event){this.setState({messageReceived:this.state.chatDisplay==='none'});}checkSize(){if(document.getElementById('layout').offsetWidth<=700&&!this.hasBeenUpdated){this.toggleChat('none');this.hasBeenUpdated=true;}if(document.getElementById('layout').offsetWidth>700&&this.hasBeenUpdated){this.hasBeenUpdated=false;}}render(){const mySessionId=this.state.mySessionId;const localUser=this.state.localUser;var chatDisplay={display:this.state.chatDisplay};return/*#__PURE__*/React.createElement(\"div\",{className:\"container\",id:\"container\"},/*#__PURE__*/React.createElement(ToolbarComponent,{sessionId:mySessionId,user:localUser,showNotification:this.state.messageReceived,camStatusChanged:this.camStatusChanged,micStatusChanged:this.micStatusChanged,screenShare:this.screenShare,stopScreenShare:this.stopScreenShare,toggleFullscreen:this.toggleFullscreen,switchCamera:this.switchCamera,leaveSession:this.leaveSession,toggleChat:this.toggleChat}),/*#__PURE__*/React.createElement(DialogExtensionComponent,{showDialog:this.state.showExtensionDialog,cancelClicked:this.closeDialogExtension}),/*#__PURE__*/React.createElement(\"div\",{id:\"layout\",className:\"bounds\"},localUser!==undefined&&localUser.getStreamManager()!==undefined&&/*#__PURE__*/React.createElement(\"div\",{className:\"OT_root OT_publisher custom-class\",id:\"localUser\"},/*#__PURE__*/React.createElement(StreamComponent,{user:localUser,handleNickname:this.nicknameChanged})),this.state.subscribers.map((sub,i)=>/*#__PURE__*/React.createElement(\"div\",{key:i,className:\"OT_root OT_publisher custom-class\",id:\"remoteUsers\"},/*#__PURE__*/React.createElement(StreamComponent,{user:sub,streamId:sub.streamManager.stream.streamId}))),localUser!==undefined&&localUser.getStreamManager()!==undefined&&/*#__PURE__*/React.createElement(\"div\",{className:\"OT_root OT_publisher custom-class\",style:chatDisplay},/*#__PURE__*/React.createElement(ChatComponent,{user:localUser,chatDisplay:this.state.chatDisplay,close:this.toggleChat,messageReceived:this.checkNotification}))));}/**\n     * --------------------------------------------\n     * GETTING A TOKEN FROM YOUR APPLICATION SERVER\n     * --------------------------------------------\n     * The methods below request the creation of a Session and a Token to\n     * your application server. This keeps your OpenVidu deployment secure.\n     *\n     * In this sample code, there is no user control at all. Anybody could\n     * access your application server endpoints! In a real production\n     * environment, your application server must identify the user to allow\n     * access to the endpoints.\n     *\n     * Visit https://docs.openvidu.io/en/stable/application-server to learn\n     * more about the integration of OpenVidu in your application server.\n     */async getToken(){const sessionId=await this.createSession(this.state.mySessionId);return await this.createToken(sessionId);}async createSession(sessionId){const response=await axios.post(APPLICATION_SERVER_URL+'api/sessions',{customSessionId:sessionId},{headers:{'Content-Type':'application/json'}});return response.data;// The sessionId\n}async createToken(sessionId){const response=await axios.post(APPLICATION_SERVER_URL+'api/sessions/'+sessionId+'/connections',{},{headers:{'Content-Type':'application/json'}});return response.data;// The token\n}}export default VideoRoomComponent;","map":{"version":3,"names":["axios","OpenVidu","React","Component","ChatComponent","DialogExtensionComponent","StreamComponent","OpenViduLayout","UserModel","ToolbarComponent","localUser","APPLICATION_SERVER_URL","process","env","NODE_ENV","VideoRoomComponent","constructor","props","hasBeenUpdated","layout","sessionName","userName","user","Math","floor","random","remotes","localUserAccessAllowed","state","mySessionId","myUserName","session","undefined","subscribers","chatDisplay","currentVideoDevice","joinSession","bind","leaveSession","onbeforeunload","updateLayout","camStatusChanged","micStatusChanged","nicknameChanged","toggleFullscreen","switchCamera","screenShare","stopScreenShare","closeDialogExtension","toggleChat","checkNotification","checkSize","componentDidMount","openViduLayoutOptions","maxRatio","minRatio","fixedRatio","bigClass","bigPercentage","bigFixedRatio","bigMaxRatio","bigMinRatio","bigFirst","animate","initLayoutContainer","document","getElementById","window","addEventListener","componentWillUnmount","removeEventListener","event","OV","setState","initSession","subscribeToStreamCreated","connectToSession","token","console","log","connect","getToken","error","code","message","messgae","status","alert","clientData","then","connectWebCam","catch","getUserMedia","audioSource","videoSource","devices","getDevices","videoDevices","filter","device","kind","publisher","initPublisher","deviceId","publishAudio","isAudioActive","publishVideo","isVideoActive","resolution","frameRate","insertMode","capabilities","publish","on","updateSubscribers","setNickname","setConnectionId","connection","connectionId","setScreenShareActive","setStreamManager","subscribeToUserChanged","subscribeToStreamDestroyed","sendSignalUserChanged","isScreenShareActive","getStreamManager","e","videos","video","parentElement","classList","remove","nickname","getNickname","mySession","disconnect","setVideoActive","setAudioActive","deleteSubscriber","stream","remoteUsers","userStream","index","indexOf","splice","subscriber","subscribe","checkSomeoneShareScreen","newUser","setType","data","split","JSON","parse","push","setTimeout","preventDefault","forEach","getConnectionId","from","signalOptions","stringify","type","signal","fs","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","length","newVideoDevice","newPublisher","mirror","unpublish","navigator","userAgent","name","showExtensionDialog","once","isScreenShared","some","openviduLayoutOptions","setLayoutOptions","property","display","messageReceived","offsetWidth","render","createElement","className","id","sessionId","showNotification","showDialog","cancelClicked","handleNickname","map","sub","i","key","streamId","streamManager","style","close","createSession","createToken","response","post","customSessionId","headers"],"sources":["/home/ubuntu/Project-Agora/openvidu-call-react/src/components/VideoRoomComponent.js"],"sourcesContent":["import axios from 'axios';\nimport { OpenVidu } from 'openvidu-browser';\nimport React, { Component } from 'react';\nimport ChatComponent from './chat/ChatComponent';\nimport DialogExtensionComponent from './dialog-extension/DialogExtension';\nimport StreamComponent from './stream/StreamComponent';\nimport './VideoRoomComponent.css';\n\nimport OpenViduLayout from '../layout/openvidu-layout';\nimport UserModel from '../models/user-model';\nimport ToolbarComponent from './toolbar/ToolbarComponent';\n\nvar localUser = new UserModel();\nconst APPLICATION_SERVER_URL = process.env.NODE_ENV === 'production' ? 'http://localhost:5000/' : 'http://localhost:5000/';\n\n\nclass VideoRoomComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.hasBeenUpdated = false;\n        this.layout = new OpenViduLayout();\n        let sessionName = this.props.sessionName ? this.props.sessionName : 'SessionA';\n        let userName = this.props.user ? this.props.user : 'OpenVidu_User' + Math.floor(Math.random() * 100);\n        this.remotes = [];\n        this.localUserAccessAllowed = false;\n        this.state = {\n            mySessionId: sessionName,\n            myUserName: userName,\n            session: undefined,\n            localUser: undefined,\n            subscribers: [],\n            chatDisplay: 'none',\n            currentVideoDevice: undefined,\n        };\n\n        this.joinSession = this.joinSession.bind(this);\n        this.leaveSession = this.leaveSession.bind(this);\n        this.onbeforeunload = this.onbeforeunload.bind(this);\n        this.updateLayout = this.updateLayout.bind(this);\n        this.camStatusChanged = this.camStatusChanged.bind(this);\n        this.micStatusChanged = this.micStatusChanged.bind(this);\n        this.nicknameChanged = this.nicknameChanged.bind(this);\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\n        this.switchCamera = this.switchCamera.bind(this);\n        this.screenShare = this.screenShare.bind(this);\n        this.stopScreenShare = this.stopScreenShare.bind(this);\n        this.closeDialogExtension = this.closeDialogExtension.bind(this);\n        this.toggleChat = this.toggleChat.bind(this);\n        this.checkNotification = this.checkNotification.bind(this);\n        this.checkSize = this.checkSize.bind(this);\n    }\n\n    componentDidMount() {\n        const openViduLayoutOptions = {\n            maxRatio: 3 / 2, // The narrowest ratio that will be used (default 2x3)\n            minRatio: 9 / 16, // The widest ratio that will be used (default 16x9)\n            fixedRatio: false, // If this is true then the aspect ratio of the video is maintained and minRatio and maxRatio are ignored (default false)\n            bigClass: 'OV_big', // The class to add to elements that should be sized bigger\n            bigPercentage: 0.8, // The maximum percentage of space the big ones should take up\n            bigFixedRatio: false, // fixedRatio for the big ones\n            bigMaxRatio: 3 / 2, // The narrowest ratio to use for the big elements (default 2x3)\n            bigMinRatio: 9 / 16, // The widest ratio to use for the big elements (default 16x9)\n            bigFirst: true, // Whether to place the big one in the top left (true) or bottom right\n            animate: true, // Whether you want to animate the transitions\n        };\n\n        this.layout.initLayoutContainer(document.getElementById('layout'), openViduLayoutOptions);\n        window.addEventListener('beforeunload', this.onbeforeunload);\n        window.addEventListener('resize', this.updateLayout);\n        window.addEventListener('resize', this.checkSize);\n        this.joinSession();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', this.onbeforeunload);\n        window.removeEventListener('resize', this.updateLayout);\n        window.removeEventListener('resize', this.checkSize);\n        this.leaveSession();\n    }\n\n    onbeforeunload(event) {\n        this.leaveSession();\n    }\n\n    joinSession() {\n        this.OV = new OpenVidu();\n\n        this.setState(\n            {\n                session: this.OV.initSession(),\n            },\n            async () => {\n                this.subscribeToStreamCreated();\n                await this.connectToSession();\n            },\n        );\n    }\n\n    async connectToSession() {\n        if (this.props.token !== undefined) {\n            console.log('token received: ', this.props.token);\n            this.connect(this.props.token);\n        } else {\n            try {\n                var token = await this.getToken();\n                console.log(token);\n                this.connect(token);\n            } catch (error) {\n                console.error('There was an error getting the token:', error.code, error.message);\n                if(this.props.error){\n                    this.props.error({ error: error.error, messgae: error.message, code: error.code, status: error.status });\n                }\n                alert('There was an error getting the token:', error.message);\n            }\n        }\n    }\n\n    connect(token) {\n        this.state.session\n            .connect(\n                token,\n                { clientData: this.state.myUserName },\n            )\n            .then(() => {\n                this.connectWebCam();\n            })\n            .catch((error) => {\n                if(this.props.error){\n                    this.props.error({ error: error.error, messgae: error.message, code: error.code, status: error.status });\n                }\n                alert('There was an error connecting to the session:', error.message);\n                console.log('There was an error connecting to the session:', error.code, error.message);\n            });\n    }\n\n    async connectWebCam() {\n        await this.OV.getUserMedia({ audioSource: undefined, videoSource: undefined });\n        var devices = await this.OV.getDevices();\n        var videoDevices = devices.filter(device => device.kind === 'videoinput');\n\n        let publisher = this.OV.initPublisher(undefined, {\n            audioSource: undefined,\n            videoSource: videoDevices[0].deviceId,\n            publishAudio: localUser.isAudioActive(),\n            publishVideo: localUser.isVideoActive(),\n            resolution: '640x480',\n            frameRate: 30,\n            insertMode: 'APPEND',\n        });\n\n        if (this.state.session.capabilities.publish) {\n            publisher.on('accessAllowed' , () => {\n                this.state.session.publish(publisher).then(() => {\n                    this.updateSubscribers();\n                    this.localUserAccessAllowed = true;\n                    if (this.props.joinSession) {\n                        this.props.joinSession();\n                    }\n                });\n            });\n\n        }\n        localUser.setNickname(this.state.myUserName);\n        localUser.setConnectionId(this.state.session.connection.connectionId);\n        localUser.setScreenShareActive(false);\n        localUser.setStreamManager(publisher);\n        this.subscribeToUserChanged();\n        this.subscribeToStreamDestroyed();\n        this.sendSignalUserChanged({ isScreenShareActive: localUser.isScreenShareActive() });\n\n        this.setState({ currentVideoDevice: videoDevices[0], localUser: localUser }, () => {\n            this.state.localUser.getStreamManager().on('streamPlaying', (e) => {\n                this.updateLayout();\n                publisher.videos[0].video.parentElement.classList.remove('custom-class');\n            });\n        });\n    }\n\n    updateSubscribers() {\n        var subscribers = this.remotes;\n        this.setState(\n            {\n                subscribers: subscribers,\n            },\n            () => {\n                if (this.state.localUser) {\n                    this.sendSignalUserChanged({\n                        isAudioActive: this.state.localUser.isAudioActive(),\n                        isVideoActive: this.state.localUser.isVideoActive(),\n                        nickname: this.state.localUser.getNickname(),\n                        isScreenShareActive: this.state.localUser.isScreenShareActive(),\n                    });\n                }\n                this.updateLayout();\n            },\n        );\n    }\n\n    leaveSession() {\n        const mySession = this.state.session;\n\n        if (mySession) {\n            mySession.disconnect();\n        }\n\n        // Empty all properties...\n        this.OV = null;\n        this.setState({\n            session: undefined,\n            subscribers: [],\n            mySessionId: 'SessionA',\n            myUserName: 'OpenVidu_User' + Math.floor(Math.random() * 100),\n            localUser: undefined,\n        });\n        if (this.props.leaveSession) {\n            this.props.leaveSession();\n        }\n    }\n    camStatusChanged() {\n        localUser.setVideoActive(!localUser.isVideoActive());\n        localUser.getStreamManager().publishVideo(localUser.isVideoActive());\n        this.sendSignalUserChanged({ isVideoActive: localUser.isVideoActive() });\n        this.setState({ localUser: localUser });\n    }\n\n    micStatusChanged() {\n        localUser.setAudioActive(!localUser.isAudioActive());\n        localUser.getStreamManager().publishAudio(localUser.isAudioActive());\n        this.sendSignalUserChanged({ isAudioActive: localUser.isAudioActive() });\n        this.setState({ localUser: localUser });\n    }\n\n    nicknameChanged(nickname) {\n        let localUser = this.state.localUser;\n        localUser.setNickname(nickname);\n        this.setState({ localUser: localUser });\n        this.sendSignalUserChanged({ nickname: this.state.localUser.getNickname() });\n    }\n\n    deleteSubscriber(stream) {\n        const remoteUsers = this.state.subscribers;\n        const userStream = remoteUsers.filter((user) => user.getStreamManager().stream === stream)[0];\n        let index = remoteUsers.indexOf(userStream, 0);\n        if (index > -1) {\n            remoteUsers.splice(index, 1);\n            this.setState({\n                subscribers: remoteUsers,\n            });\n        }\n    }\n\n    subscribeToStreamCreated() {\n        this.state.session.on('streamCreated', (event) => {\n            const subscriber = this.state.session.subscribe(event.stream, undefined);\n            // var subscribers = this.state.subscribers;\n            subscriber.on('streamPlaying', (e) => {\n                this.checkSomeoneShareScreen();\n                subscriber.videos[0].video.parentElement.classList.remove('custom-class');\n            });\n            const newUser = new UserModel();\n            newUser.setStreamManager(subscriber);\n            newUser.setConnectionId(event.stream.connection.connectionId);\n            newUser.setType('remote');\n            const nickname = event.stream.connection.data.split('%')[0];\n            newUser.setNickname(JSON.parse(nickname).clientData);\n            this.remotes.push(newUser);\n            if(this.localUserAccessAllowed) {\n                this.updateSubscribers();\n            }\n        });\n    }\n\n    subscribeToStreamDestroyed() {\n        // On every Stream destroyed...\n        this.state.session.on('streamDestroyed', (event) => {\n            // Remove the stream from 'subscribers' array\n            this.deleteSubscriber(event.stream);\n            setTimeout(() => {\n                this.checkSomeoneShareScreen();\n            }, 20);\n            event.preventDefault();\n            this.updateLayout();\n        });\n    }\n\n    subscribeToUserChanged() {\n        this.state.session.on('signal:userChanged', (event) => {\n            let remoteUsers = this.state.subscribers;\n            remoteUsers.forEach((user) => {\n                if (user.getConnectionId() === event.from.connectionId) {\n                    const data = JSON.parse(event.data);\n                    console.log('EVENTO REMOTE: ', event.data);\n                    if (data.isAudioActive !== undefined) {\n                        user.setAudioActive(data.isAudioActive);\n                    }\n                    if (data.isVideoActive !== undefined) {\n                        user.setVideoActive(data.isVideoActive);\n                    }\n                    if (data.nickname !== undefined) {\n                        user.setNickname(data.nickname);\n                    }\n                    if (data.isScreenShareActive !== undefined) {\n                        user.setScreenShareActive(data.isScreenShareActive);\n                    }\n                }\n            });\n            this.setState(\n                {\n                    subscribers: remoteUsers,\n                },\n                () => this.checkSomeoneShareScreen(),\n            );\n        });\n    }\n\n    updateLayout() {\n        setTimeout(() => {\n            this.layout.updateLayout();\n        }, 20);\n    }\n\n    sendSignalUserChanged(data) {\n        const signalOptions = {\n            data: JSON.stringify(data),\n            type: 'userChanged',\n        };\n        this.state.session.signal(signalOptions);\n    }\n\n    toggleFullscreen() {\n        const document = window.document;\n        const fs = document.getElementById('container');\n        if (\n            !document.fullscreenElement &&\n            !document.mozFullScreenElement &&\n            !document.webkitFullscreenElement &&\n            !document.msFullscreenElement\n        ) {\n            if (fs.requestFullscreen) {\n                fs.requestFullscreen();\n            } else if (fs.msRequestFullscreen) {\n                fs.msRequestFullscreen();\n            } else if (fs.mozRequestFullScreen) {\n                fs.mozRequestFullScreen();\n            } else if (fs.webkitRequestFullscreen) {\n                fs.webkitRequestFullscreen();\n            }\n        } else {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            }\n        }\n    }\n\n    async switchCamera() {\n        try{\n            const devices = await this.OV.getDevices()\n            var videoDevices = devices.filter(device => device.kind === 'videoinput');\n\n            if(videoDevices && videoDevices.length > 1) {\n\n                var newVideoDevice = videoDevices.filter(device => device.deviceId !== this.state.currentVideoDevice.deviceId)\n\n                if (newVideoDevice.length > 0) {\n                    // Creating a new publisher with specific videoSource\n                    // In mobile devices the default and first camera is the front one\n                    var newPublisher = this.OV.initPublisher(undefined, {\n                        audioSource: undefined,\n                        videoSource: newVideoDevice[0].deviceId,\n                        publishAudio: localUser.isAudioActive(),\n                        publishVideo: localUser.isVideoActive(),\n                        mirror: true\n                    });\n\n                    //newPublisher.once(\"accessAllowed\", () => {\n                    await this.state.session.unpublish(this.state.localUser.getStreamManager());\n                    await this.state.session.publish(newPublisher)\n                    this.state.localUser.setStreamManager(newPublisher);\n                    this.setState({\n                        currentVideoDevice: newVideoDevice,\n                        localUser: localUser,\n                    });\n                }\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    screenShare() {\n        const videoSource = navigator.userAgent.indexOf('Firefox') !== -1 ? 'window' : 'screen';\n        const publisher = this.OV.initPublisher(\n            undefined,\n            {\n                videoSource: videoSource,\n                publishAudio: localUser.isAudioActive(),\n                publishVideo: localUser.isVideoActive(),\n                mirror: false,\n            },\n            (error) => {\n                if (error && error.name === 'SCREEN_EXTENSION_NOT_INSTALLED') {\n                    this.setState({ showExtensionDialog: true });\n                } else if (error && error.name === 'SCREEN_SHARING_NOT_SUPPORTED') {\n                    alert('Your browser does not support screen sharing');\n                } else if (error && error.name === 'SCREEN_EXTENSION_DISABLED') {\n                    alert('You need to enable screen sharing extension');\n                } else if (error && error.name === 'SCREEN_CAPTURE_DENIED') {\n                    alert('You need to choose a window or application to share');\n                }\n            },\n        );\n\n        publisher.once('accessAllowed', () => {\n            this.state.session.unpublish(localUser.getStreamManager());\n            localUser.setStreamManager(publisher);\n            this.state.session.publish(localUser.getStreamManager()).then(() => {\n                localUser.setScreenShareActive(true);\n                this.setState({ localUser: localUser }, () => {\n                    this.sendSignalUserChanged({ isScreenShareActive: localUser.isScreenShareActive() });\n                });\n            });\n        });\n        publisher.on('streamPlaying', () => {\n            this.updateLayout();\n            publisher.videos[0].video.parentElement.classList.remove('custom-class');\n        });\n    }\n\n    closeDialogExtension() {\n        this.setState({ showExtensionDialog: false });\n    }\n\n    stopScreenShare() {\n        this.state.session.unpublish(localUser.getStreamManager());\n        this.connectWebCam();\n    }\n\n    checkSomeoneShareScreen() {\n        let isScreenShared;\n        // return true if at least one passes the test\n        isScreenShared = this.state.subscribers.some((user) => user.isScreenShareActive()) || localUser.isScreenShareActive();\n        const openviduLayoutOptions = {\n            maxRatio: 3 / 2,\n            minRatio: 9 / 16,\n            fixedRatio: isScreenShared,\n            bigClass: 'OV_big',\n            bigPercentage: 0.8,\n            bigFixedRatio: false,\n            bigMaxRatio: 3 / 2,\n            bigMinRatio: 9 / 16,\n            bigFirst: true,\n            animate: true,\n        };\n        this.layout.setLayoutOptions(openviduLayoutOptions);\n        this.updateLayout();\n    }\n\n    toggleChat(property) {\n        let display = property;\n\n        if (display === undefined) {\n            display = this.state.chatDisplay === 'none' ? 'block' : 'none';\n        }\n        if (display === 'block') {\n            this.setState({ chatDisplay: display, messageReceived: false });\n        } else {\n            console.log('chat', display);\n            this.setState({ chatDisplay: display });\n        }\n        this.updateLayout();\n    }\n\n    checkNotification(event) {\n        this.setState({\n            messageReceived: this.state.chatDisplay === 'none',\n        });\n    }\n    checkSize() {\n        if (document.getElementById('layout').offsetWidth <= 700 && !this.hasBeenUpdated) {\n            this.toggleChat('none');\n            this.hasBeenUpdated = true;\n        }\n        if (document.getElementById('layout').offsetWidth > 700 && this.hasBeenUpdated) {\n            this.hasBeenUpdated = false;\n        }\n    }\n\n    render() {\n        const mySessionId = this.state.mySessionId;\n        const localUser = this.state.localUser;\n        var chatDisplay = { display: this.state.chatDisplay };\n\n        return (\n            <div className=\"container\" id=\"container\">\n                <ToolbarComponent\n                    sessionId={mySessionId}\n                    user={localUser}\n                    showNotification={this.state.messageReceived}\n                    camStatusChanged={this.camStatusChanged}\n                    micStatusChanged={this.micStatusChanged}\n                    screenShare={this.screenShare}\n                    stopScreenShare={this.stopScreenShare}\n                    toggleFullscreen={this.toggleFullscreen}\n                    switchCamera={this.switchCamera}\n                    leaveSession={this.leaveSession}\n                    toggleChat={this.toggleChat}\n                />\n\n                <DialogExtensionComponent showDialog={this.state.showExtensionDialog} cancelClicked={this.closeDialogExtension} />\n\n                <div id=\"layout\" className=\"bounds\">\n                    {localUser !== undefined && localUser.getStreamManager() !== undefined && (\n                        <div className=\"OT_root OT_publisher custom-class\" id=\"localUser\">\n                            <StreamComponent user={localUser} handleNickname={this.nicknameChanged} />\n                        </div>\n                    )}\n                    {this.state.subscribers.map((sub, i) => (\n                        <div key={i} className=\"OT_root OT_publisher custom-class\" id=\"remoteUsers\">\n                            <StreamComponent user={sub} streamId={sub.streamManager.stream.streamId} />\n                        </div>\n                    ))}\n                    {localUser !== undefined && localUser.getStreamManager() !== undefined && (\n                        <div className=\"OT_root OT_publisher custom-class\" style={chatDisplay}>\n                            <ChatComponent\n                                user={localUser}\n                                chatDisplay={this.state.chatDisplay}\n                                close={this.toggleChat}\n                                messageReceived={this.checkNotification}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * --------------------------------------------\n     * GETTING A TOKEN FROM YOUR APPLICATION SERVER\n     * --------------------------------------------\n     * The methods below request the creation of a Session and a Token to\n     * your application server. This keeps your OpenVidu deployment secure.\n     *\n     * In this sample code, there is no user control at all. Anybody could\n     * access your application server endpoints! In a real production\n     * environment, your application server must identify the user to allow\n     * access to the endpoints.\n     *\n     * Visit https://docs.openvidu.io/en/stable/application-server to learn\n     * more about the integration of OpenVidu in your application server.\n     */\n    async getToken() {\n        const sessionId = await this.createSession(this.state.mySessionId);\n        return await this.createToken(sessionId);\n    }\n\n    async createSession(sessionId) {\n        const response = await axios.post(APPLICATION_SERVER_URL + 'api/sessions', { customSessionId: sessionId }, {\n            headers: { 'Content-Type': 'application/json', },\n        });\n        return response.data; // The sessionId\n    }\n\n    async createToken(sessionId) {\n        const response = await axios.post(APPLICATION_SERVER_URL + 'api/sessions/' + sessionId + '/connections', {}, {\n            headers: { 'Content-Type': 'application/json', },\n        });\n        return response.data; // The token\n    }\n}\nexport default VideoRoomComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}