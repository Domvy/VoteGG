{"ast":null,"code":"import $ from'jquery';class OpenViduLayout{fixAspectRatio(elem,width){const sub=elem.querySelector('.OT_root');if(sub){// If this is the parent of a subscriber or publisher then we need\n// to force the mutation observer on the publisher or subscriber to\n// trigger to get it to fix it's layout\nconst oldWidth=sub.style.width;sub.style.width=width+'px';// sub.style.height = height + 'px';\nsub.style.width=oldWidth||'';}}positionElement(elem,x,y,width,height,animate){const targetPosition={left:x+'px',top:y+'px',width:width+'px',height:height+'px'};this.fixAspectRatio(elem,width);if(animate&&$){$(elem).stop();$(elem).animate(targetPosition,animate.duration||200,animate.easing||'swing',()=>{this.fixAspectRatio(elem,width);if(animate.complete){animate.complete.call(this);}});}else{$(elem).css(targetPosition);}this.fixAspectRatio(elem,width);}getVideoRatio(elem){if(!elem){return 3/4;}const video=elem.querySelector('video');if(video&&video.videoHeight&&video.videoWidth){return video.videoHeight/video.videoWidth;}else if(elem.videoHeight&&elem.videoWidth){return elem.videoHeight/elem.videoWidth;}return 3/4;}getCSSNumber(elem,prop){const cssStr=$(elem).css(prop);return cssStr?parseInt(cssStr,10):0;}// Really cheap UUID function\ncheapUUID(){return(Math.random()*100000000).toFixed(0);}getHeight(elem){const heightStr=$(elem).css('height');return heightStr?parseInt(heightStr,10):0;}getWidth(elem){const widthStr=$(elem).css('width');return widthStr?parseInt(widthStr,10):0;}getBestDimensions(minR,maxR,count,WIDTH,HEIGHT,targetHeight){let maxArea,targetCols,targetRows,targetWidth,tWidth,tHeight,tRatio;// Iterate through every possible combination of rows and columns\n// and see which one has the least amount of whitespace\nfor(let i=1;i<=count;i++){const colsAux=i;const rowsAux=Math.ceil(count/colsAux);// Try taking up the whole height and width\ntHeight=Math.floor(HEIGHT/rowsAux);tWidth=Math.floor(WIDTH/colsAux);tRatio=tHeight/tWidth;if(tRatio>maxR){// We went over decrease the height\ntRatio=maxR;tHeight=tWidth*tRatio;}else if(tRatio<minR){// We went under decrease the width\ntRatio=minR;tWidth=tHeight/tRatio;}const area=tWidth*tHeight*count;// If this width and height takes up the most space then we're going with that\nif(maxArea===undefined||area>maxArea){maxArea=area;targetHeight=tHeight;targetWidth=tWidth;targetCols=colsAux;targetRows=rowsAux;}}return{maxArea:maxArea,targetCols:targetCols,targetRows:targetRows,targetHeight:targetHeight,targetWidth:targetWidth,ratio:targetHeight/targetWidth};}arrange(children,WIDTH,HEIGHT,offsetLeft,offsetTop,fixedRatio,minRatio,maxRatio,animate){let targetHeight;const count=children.length;let dimensions;if(!fixedRatio){dimensions=this.getBestDimensions(minRatio,maxRatio,count,WIDTH,HEIGHT,targetHeight);}else{// Use the ratio of the first video element we find to approximate\nconst ratio=this.getVideoRatio(children.length>0?children[0]:null);dimensions=this.getBestDimensions(ratio,ratio,count,WIDTH,HEIGHT,targetHeight);}// Loop through each stream in the container and place it inside\nlet x=0,y=0;const rows=[];let row;// Iterate through the children and create an array with a new item for each row\n// and calculate the width of each row so that we know if we go over the size and need\n// to adjust\nfor(let i=0;i<children.length;i++){if(i%dimensions.targetCols===0){// This is a new row\nrow={children:[],width:0,height:0};rows.push(row);}const elem=children[i];row.children.push(elem);let targetWidth=dimensions.targetWidth;targetHeight=dimensions.targetHeight;// If we're using a fixedRatio then we need to set the correct ratio for this element\nif(fixedRatio){targetWidth=targetHeight/this.getVideoRatio(elem);}row.width+=targetWidth;row.height=targetHeight;}// Calculate total row height adjusting if we go too wide\nlet totalRowHeight=0;let remainingShortRows=0;for(let i=0;i<rows.length;i++){row=rows[i];if(row.width>WIDTH){// Went over on the width, need to adjust the height proportionally\nrow.height=Math.floor(row.height*(WIDTH/row.width));row.width=WIDTH;}else if(row.width<WIDTH){remainingShortRows+=1;}totalRowHeight+=row.height;}if(totalRowHeight<HEIGHT&&remainingShortRows>0){// We can grow some of the rows, we're not taking up the whole height\nlet remainingHeightDiff=HEIGHT-totalRowHeight;totalRowHeight=0;for(let i=0;i<rows.length;i++){row=rows[i];if(row.width<WIDTH){// Evenly distribute the extra height between the short rows\nlet extraHeight=remainingHeightDiff/remainingShortRows;if(extraHeight/row.height>(WIDTH-row.width)/row.width){// We can't go that big or we'll go too wide\nextraHeight=Math.floor((WIDTH-row.width)/row.width*row.height);}row.width+=Math.floor(extraHeight/row.height*row.width);row.height+=extraHeight;remainingHeightDiff-=extraHeight;remainingShortRows-=1;}totalRowHeight+=row.height;}}// vertical centering\ny=(HEIGHT-totalRowHeight)/2;// Iterate through each row and place each child\nfor(let i=0;i<rows.length;i++){row=rows[i];// center the row\nconst rowMarginLeft=(WIDTH-row.width)/2;x=rowMarginLeft;for(let j=0;j<row.children.length;j++){const elem=row.children[j];let targetWidth=dimensions.targetWidth;targetHeight=row.height;// If we're using a fixedRatio then we need to set the correct ratio for this element\nif(fixedRatio){targetWidth=Math.floor(targetHeight/this.getVideoRatio(elem));}elem.style.position='absolute';// $(elem).css('position', 'absolute');\nconst actualWidth=targetWidth-this.getCSSNumber(elem,'paddingLeft')-this.getCSSNumber(elem,'paddingRight')-this.getCSSNumber(elem,'marginLeft')-this.getCSSNumber(elem,'marginRight')-this.getCSSNumber(elem,'borderLeft')-this.getCSSNumber(elem,'borderRight');const actualHeight=targetHeight-this.getCSSNumber(elem,'paddingTop')-this.getCSSNumber(elem,'paddingBottom')-this.getCSSNumber(elem,'marginTop')-this.getCSSNumber(elem,'marginBottom')-this.getCSSNumber(elem,'borderTop')-this.getCSSNumber(elem,'borderBottom');this.positionElement(elem,x+offsetLeft,y+offsetTop,actualWidth,actualHeight,animate);x+=targetWidth;}y+=targetHeight;}}filterDisplayNone(element){return element.style.display!=='none';}updateLayout(){if(this.layoutContainer.style.display==='none'){return;}let id=this.layoutContainer.id;if(!id){id='OT_'+this.cheapUUID();this.layoutContainer.id=id;}const HEIGHT=this.getHeight(this.layoutContainer)-this.getCSSNumber(this.layoutContainer,'borderTop')-this.getCSSNumber(this.layoutContainer,'borderBottom');const WIDTH=this.getWidth(this.layoutContainer)-this.getCSSNumber(this.layoutContainer,'borderLeft')-this.getCSSNumber(this.layoutContainer,'borderRight');const availableRatio=HEIGHT/WIDTH;let offsetLeft=0;let offsetTop=0;let bigOffsetTop=0;let bigOffsetLeft=0;const bigOnes=Array.prototype.filter.call(this.layoutContainer.querySelectorAll('#'+id+'>.'+this.opts.bigClass),this.filterDisplayNone);const smallOnes=Array.prototype.filter.call(this.layoutContainer.querySelectorAll('#'+id+'>*:not(.'+this.opts.bigClass+')'),this.filterDisplayNone);if(bigOnes.length>0&&smallOnes.length>0){let bigWidth,bigHeight;if(availableRatio>this.getVideoRatio(bigOnes[0])){// We are tall, going to take up the whole width and arrange small\n// guys at the bottom\nbigWidth=WIDTH;bigHeight=Math.floor(HEIGHT*this.opts.bigPercentage);offsetTop=bigHeight;bigOffsetTop=HEIGHT-offsetTop;}else{// We are wide, going to take up the whole height and arrange the small\n// guys on the right\nbigHeight=HEIGHT;bigWidth=Math.floor(WIDTH*this.opts.bigPercentage);offsetLeft=bigWidth;bigOffsetLeft=WIDTH-offsetLeft;}if(this.opts.bigFirst){this.arrange(bigOnes,bigWidth,bigHeight,0,0,this.opts.bigFixedRatio,this.opts.bigMinRatio,this.opts.bigMaxRatio,this.opts.animate);this.arrange(smallOnes,WIDTH-offsetLeft,HEIGHT-offsetTop,offsetLeft,offsetTop,this.opts.fixedRatio,this.opts.minRatio,this.opts.maxRatio,this.opts.animate);}else{this.arrange(smallOnes,WIDTH-offsetLeft,HEIGHT-offsetTop,0,0,this.opts.fixedRatio,this.opts.minRatio,this.opts.maxRatio,this.opts.animate);this.arrange(bigOnes,bigWidth,bigHeight,bigOffsetLeft,bigOffsetTop,this.opts.bigFixedRatio,this.opts.bigMinRatio,this.opts.bigMaxRatio,this.opts.animate);}}else if(bigOnes.length>0&&smallOnes.length===0){this// We only have one bigOne just center it\n.arrange(bigOnes,WIDTH,HEIGHT,0,0,this.opts.bigFixedRatio,this.opts.bigMinRatio,this.opts.bigMaxRatio,this.opts.animate);}else{this.arrange(smallOnes,WIDTH-offsetLeft,HEIGHT-offsetTop,offsetLeft,offsetTop,this.opts.fixedRatio,this.opts.minRatio,this.opts.maxRatio,this.opts.animate);}}initLayoutContainer(container,opts){this.opts={maxRatio:opts.maxRatio!=null?opts.maxRatio:3/2,minRatio:opts.minRatio!=null?opts.minRatio:9/16,fixedRatio:opts.fixedRatio!=null?opts.fixedRatio:false,animate:opts.animate!=null?opts.animate:false,bigClass:opts.bigClass!=null?opts.bigClass:'OT_big',bigPercentage:opts.bigPercentage!=null?opts.bigPercentage:0.8,bigFixedRatio:opts.bigFixedRatio!=null?opts.bigFixedRatio:false,bigMaxRatio:opts.bigMaxRatio!=null?opts.bigMaxRatio:3/2,bigMinRatio:opts.bigMinRatio!=null?opts.bigMinRatio:9/16,bigFirst:opts.bigFirst!=null?opts.bigFirst:true};this.layoutContainer=typeof container==='string'?$(container):container;}setLayoutOptions(options){this.opts=options;}}export default OpenViduLayout;","map":{"version":3,"names":["$","OpenViduLayout","fixAspectRatio","elem","width","sub","querySelector","oldWidth","style","positionElement","x","y","height","animate","targetPosition","left","top","stop","duration","easing","complete","call","css","getVideoRatio","video","videoHeight","videoWidth","getCSSNumber","prop","cssStr","parseInt","cheapUUID","Math","random","toFixed","getHeight","heightStr","getWidth","widthStr","getBestDimensions","minR","maxR","count","WIDTH","HEIGHT","targetHeight","maxArea","targetCols","targetRows","targetWidth","tWidth","tHeight","tRatio","i","colsAux","rowsAux","ceil","floor","area","undefined","ratio","arrange","children","offsetLeft","offsetTop","fixedRatio","minRatio","maxRatio","length","dimensions","rows","row","push","totalRowHeight","remainingShortRows","remainingHeightDiff","extraHeight","rowMarginLeft","j","position","actualWidth","actualHeight","filterDisplayNone","element","display","updateLayout","layoutContainer","id","availableRatio","bigOffsetTop","bigOffsetLeft","bigOnes","Array","prototype","filter","querySelectorAll","opts","bigClass","smallOnes","bigWidth","bigHeight","bigPercentage","bigFirst","bigFixedRatio","bigMinRatio","bigMaxRatio","initLayoutContainer","container","setLayoutOptions","options"],"sources":["/home/ubuntu/Project-Agora/openvidu-call-react/src/layout/openvidu-layout.js"],"sourcesContent":["import $ from 'jquery';\n\nclass OpenViduLayout {\n  layoutContainer;\n  opts ;\n\n  fixAspectRatio(elem, width) {\n    const sub = elem.querySelector('.OT_root');\n    if (sub) {\n      // If this is the parent of a subscriber or publisher then we need\n      // to force the mutation observer on the publisher or subscriber to\n      // trigger to get it to fix it's layout\n      const oldWidth = sub.style.width;\n      sub.style.width = width + 'px';\n      // sub.style.height = height + 'px';\n      sub.style.width = oldWidth || '';\n    }\n  }\n\n positionElement(elem, x, y, width, height, animate) {\n    const targetPosition = {\n      left: x + 'px',\n      top: y + 'px',\n      width: width + 'px',\n      height: height + 'px',\n    };\n\n    this.fixAspectRatio(elem, width);\n\n    if (animate && $) {\n      $(elem).stop();\n      $(elem).animate(targetPosition, animate.duration || 200, animate.easing || 'swing', () => {\n        this.fixAspectRatio(elem, width);\n        if (animate.complete) {\n          animate.complete.call(this);\n        }\n      });\n    } else {\n      $(elem).css(targetPosition);\n    }\n    this.fixAspectRatio(elem, width);\n  }\n\n  getVideoRatio(elem) {\n    if (!elem) {\n      return 3 / 4;\n    }\n    const video = elem.querySelector('video');\n    if (video && video.videoHeight && video.videoWidth) {\n      return video.videoHeight / video.videoWidth;\n    } else if (elem.videoHeight && elem.videoWidth) {\n      return elem.videoHeight / elem.videoWidth;\n    }\n    return 3 / 4;\n  }\n\n   getCSSNumber(elem, prop) {\n    const cssStr = $(elem).css(prop);\n    return cssStr ? parseInt(cssStr, 10) : 0;\n  }\n\n  // Really cheap UUID function\n   cheapUUID() {\n    return (Math.random() * 100000000).toFixed(0);\n  }\n\n   getHeight(elem) {\n    const heightStr = $(elem).css('height');\n    return heightStr ? parseInt(heightStr, 10) : 0;\n  }\n\n   getWidth(elem) {\n    const widthStr = $(elem).css('width');\n    return widthStr ? parseInt(widthStr, 10) : 0;\n  }\n\n   getBestDimensions(minR , maxR , count , WIDTH, HEIGHT, targetHeight) {\n    let maxArea, targetCols, targetRows, targetWidth, tWidth, tHeight, tRatio;\n\n    // Iterate through every possible combination of rows and columns\n    // and see which one has the least amount of whitespace\n    for (let i = 1; i <= count; i++) {\n      const colsAux = i;\n      const rowsAux = Math.ceil(count / colsAux);\n\n      // Try taking up the whole height and width\n      tHeight = Math.floor(HEIGHT / rowsAux);\n      tWidth = Math.floor(WIDTH / colsAux);\n\n      tRatio = tHeight / tWidth;\n      if (tRatio > maxR) {\n        // We went over decrease the height\n        tRatio = maxR;\n        tHeight = tWidth * tRatio;\n      } else if (tRatio < minR) {\n        // We went under decrease the width\n        tRatio = minR;\n        tWidth = tHeight / tRatio;\n      }\n\n      const area = tWidth * tHeight * count;\n\n      // If this width and height takes up the most space then we're going with that\n      if (maxArea === undefined || area > maxArea) {\n        maxArea = area;\n        targetHeight = tHeight;\n        targetWidth = tWidth;\n        targetCols = colsAux;\n        targetRows = rowsAux;\n      }\n    }\n    return {\n      maxArea: maxArea,\n      targetCols: targetCols,\n      targetRows: targetRows,\n      targetHeight: targetHeight,\n      targetWidth: targetWidth,\n      ratio: targetHeight / targetWidth,\n    };\n  }\n\n   arrange(\n    children,\n    WIDTH,\n    HEIGHT,\n    offsetLeft,\n    offsetTop,\n    fixedRatio,\n    minRatio,\n    maxRatio,\n    animate,\n  ) {\n    let targetHeight;\n\n    const count = children.length;\n    let dimensions;\n\n    if (!fixedRatio) {\n      dimensions = this.getBestDimensions(minRatio, maxRatio, count, WIDTH, HEIGHT, targetHeight);\n    } else {\n      // Use the ratio of the first video element we find to approximate\n      const ratio = this.getVideoRatio(children.length > 0 ? children[0] : null);\n      dimensions = this.getBestDimensions(ratio, ratio, count, WIDTH, HEIGHT, targetHeight);\n    }\n\n    // Loop through each stream in the container and place it inside\n    let x = 0,\n      y = 0;\n    const rows = [];\n    let row;\n    // Iterate through the children and create an array with a new item for each row\n    // and calculate the width of each row so that we know if we go over the size and need\n    // to adjust\n    for (let i = 0; i < children.length; i++) {\n      if (i % dimensions.targetCols === 0) {\n        // This is a new row\n        row = {\n          children: [],\n          width: 0,\n          height: 0,\n        };\n        rows.push(row);\n      }\n      const elem = children[i];\n      row.children.push(elem);\n      let targetWidth = dimensions.targetWidth;\n      targetHeight = dimensions.targetHeight;\n      // If we're using a fixedRatio then we need to set the correct ratio for this element\n      if (fixedRatio) {\n        targetWidth = targetHeight / this.getVideoRatio(elem);\n      }\n      row.width += targetWidth;\n      row.height = targetHeight;\n    }\n    // Calculate total row height adjusting if we go too wide\n    let totalRowHeight = 0;\n    let remainingShortRows = 0;\n    for (let i = 0; i < rows.length; i++) {\n      row = rows[i];\n      if (row.width > WIDTH) {\n        // Went over on the width, need to adjust the height proportionally\n        row.height = Math.floor(row.height * (WIDTH / row.width));\n        row.width = WIDTH;\n      } else if (row.width < WIDTH) {\n        remainingShortRows += 1;\n      }\n      totalRowHeight += row.height;\n    }\n    if (totalRowHeight < HEIGHT && remainingShortRows > 0) {\n      // We can grow some of the rows, we're not taking up the whole height\n      let remainingHeightDiff = HEIGHT - totalRowHeight;\n      totalRowHeight = 0;\n      for (let i = 0; i < rows.length; i++) {\n        row = rows[i];\n        if (row.width < WIDTH) {\n          // Evenly distribute the extra height between the short rows\n          let extraHeight = remainingHeightDiff / remainingShortRows;\n          if (extraHeight / row.height > (WIDTH - row.width) / row.width) {\n            // We can't go that big or we'll go too wide\n            extraHeight = Math.floor((WIDTH - row.width) / row.width * row.height);\n          }\n          row.width += Math.floor(extraHeight / row.height * row.width);\n          row.height += extraHeight;\n          remainingHeightDiff -= extraHeight;\n          remainingShortRows -= 1;\n        }\n        totalRowHeight += row.height;\n      }\n    }\n    // vertical centering\n    y = (HEIGHT - totalRowHeight) / 2;\n    // Iterate through each row and place each child\n    for (let i = 0; i < rows.length; i++) {\n      row = rows[i];\n      // center the row\n      const rowMarginLeft = (WIDTH - row.width) / 2;\n      x = rowMarginLeft;\n      for (let j = 0; j < row.children.length; j++) {\n        const elem = row.children[j];\n\n        let targetWidth = dimensions.targetWidth;\n        targetHeight = row.height;\n        // If we're using a fixedRatio then we need to set the correct ratio for this element\n        if (fixedRatio) {\n          targetWidth = Math.floor(targetHeight / this.getVideoRatio(elem));\n        }\n        elem.style.position = 'absolute';\n        // $(elem).css('position', 'absolute');\n        const actualWidth =\n          targetWidth -\n          this.getCSSNumber(elem, 'paddingLeft') -\n          this.getCSSNumber(elem, 'paddingRight') -\n          this.getCSSNumber(elem, 'marginLeft') -\n          this.getCSSNumber(elem, 'marginRight') -\n          this.getCSSNumber(elem, 'borderLeft') -\n          this.getCSSNumber(elem, 'borderRight');\n\n        const actualHeight =\n          targetHeight -\n          this.getCSSNumber(elem, 'paddingTop') -\n          this.getCSSNumber(elem, 'paddingBottom') -\n          this.getCSSNumber(elem, 'marginTop') -\n          this.getCSSNumber(elem, 'marginBottom') -\n          this.getCSSNumber(elem, 'borderTop') -\n          this.getCSSNumber(elem, 'borderBottom');\n\n        this.positionElement(elem, x + offsetLeft, y + offsetTop, actualWidth, actualHeight, animate);\n        x += targetWidth;\n      }\n      y += targetHeight;\n    }\n  }\n\n filterDisplayNone(element) {\n    return element.style.display !== 'none';\n  }\n\n  updateLayout() {\n    if (this.layoutContainer.style.display === 'none') {\n      return;\n    }\n    let id = this.layoutContainer.id;\n    if (!id) {\n      id = 'OT_' + this.cheapUUID();\n      this.layoutContainer.id = id;\n    }\n\n    const HEIGHT =\n      this.getHeight(this.layoutContainer) -\n      this.getCSSNumber(this.layoutContainer, 'borderTop') -\n      this.getCSSNumber(this.layoutContainer, 'borderBottom');\n    const WIDTH =\n      this.getWidth(this.layoutContainer) -\n      this.getCSSNumber(this.layoutContainer, 'borderLeft') -\n      this.getCSSNumber(this.layoutContainer, 'borderRight');\n\n    const availableRatio = HEIGHT / WIDTH;\n\n    let offsetLeft = 0;\n    let offsetTop = 0;\n    let bigOffsetTop = 0;\n    let bigOffsetLeft = 0;\n\n    const bigOnes = Array.prototype.filter.call(\n      this.layoutContainer.querySelectorAll('#' + id + '>.' + this.opts.bigClass),\n      this.filterDisplayNone,\n    );\n    const smallOnes = Array.prototype.filter.call(\n      this.layoutContainer.querySelectorAll('#' + id + '>*:not(.' + this.opts.bigClass + ')'),\n      this.filterDisplayNone,\n    );\n\n    if (bigOnes.length > 0 && smallOnes.length > 0) {\n      let bigWidth, bigHeight;\n\n      if (availableRatio > this.getVideoRatio(bigOnes[0])) {\n        // We are tall, going to take up the whole width and arrange small\n        // guys at the bottom\n        bigWidth = WIDTH;\n        bigHeight = Math.floor(HEIGHT * this.opts.bigPercentage);\n        offsetTop = bigHeight;\n        bigOffsetTop = HEIGHT - offsetTop;\n      } else {\n        // We are wide, going to take up the whole height and arrange the small\n        // guys on the right\n        bigHeight = HEIGHT;\n        bigWidth = Math.floor(WIDTH * this.opts.bigPercentage);\n        offsetLeft = bigWidth;\n        bigOffsetLeft = WIDTH - offsetLeft;\n      }\n      if (this.opts.bigFirst) {\n        this.arrange(\n          bigOnes,\n          bigWidth,\n          bigHeight,\n          0,\n          0,\n          this.opts.bigFixedRatio,\n          this.opts.bigMinRatio,\n          this.opts.bigMaxRatio,\n          this.opts.animate,\n        );\n        this.arrange(\n          smallOnes,\n          WIDTH - offsetLeft,\n          HEIGHT - offsetTop,\n          offsetLeft,\n          offsetTop,\n          this.opts.fixedRatio,\n          this.opts.minRatio,\n          this.opts.maxRatio,\n          this.opts.animate,\n        );\n      } else {\n        this.arrange(\n          smallOnes,\n          WIDTH - offsetLeft,\n          HEIGHT - offsetTop,\n          0,\n          0,\n          this.opts.fixedRatio,\n          this.opts.minRatio,\n          this.opts.maxRatio,\n          this.opts.animate,\n        );\n        this.arrange(\n          bigOnes,\n          bigWidth,\n          bigHeight,\n          bigOffsetLeft,\n          bigOffsetTop,\n          this.opts.bigFixedRatio,\n          this.opts.bigMinRatio,\n          this.opts.bigMaxRatio,\n          this.opts.animate,\n        );\n      }\n    } else if (bigOnes.length > 0 && smallOnes.length === 0) {\n      this\n        // We only have one bigOne just center it\n        .arrange(\n          bigOnes,\n          WIDTH,\n          HEIGHT,\n          0,\n          0,\n          this.opts.bigFixedRatio,\n          this.opts.bigMinRatio,\n          this.opts.bigMaxRatio,\n          this.opts.animate,\n        );\n    } else {\n      this.arrange(\n        smallOnes,\n        WIDTH - offsetLeft,\n        HEIGHT - offsetTop,\n        offsetLeft,\n        offsetTop,\n        this.opts.fixedRatio,\n        this.opts.minRatio,\n        this.opts.maxRatio,\n        this.opts.animate,\n      );\n    }\n  }\n\n  initLayoutContainer(container, opts) {\n    this.opts = {\n      maxRatio: opts.maxRatio != null ? opts.maxRatio : 3 / 2,\n      minRatio: opts.minRatio != null ? opts.minRatio : 9 / 16,\n      fixedRatio: opts.fixedRatio != null ? opts.fixedRatio : false,\n      animate: opts.animate != null ? opts.animate : false,\n      bigClass: opts.bigClass != null ? opts.bigClass : 'OT_big',\n      bigPercentage: opts.bigPercentage != null ? opts.bigPercentage : 0.8,\n      bigFixedRatio: opts.bigFixedRatio != null ? opts.bigFixedRatio : false,\n      bigMaxRatio: opts.bigMaxRatio != null ? opts.bigMaxRatio : 3 / 2,\n      bigMinRatio: opts.bigMinRatio != null ? opts.bigMinRatio : 9 / 16,\n      bigFirst: opts.bigFirst != null ? opts.bigFirst : true,\n    };\n    this.layoutContainer = typeof container === 'string' ? $(container) : container;\n  }\n\n  setLayoutOptions(options) {\n    this.opts = options;\n  }\n}\nexport default OpenViduLayout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}